Given an array arr[] and an integer K where K is smaller than size of array, the task is to find the Kth smallest element in the given array. 
It is given that all array elements are distinct.
Note :-  l and r denotes the starting and ending index of the array.

Example 1:
Input:
N = 6
arr[] = 7 10 4 3 20 15
K = 3
Output : 7
Explanation :
3rd smallest element in the given array is 7.

Example 2:
Input:
N = 5
arr[] = 7 10 4 20 15
K = 4
Output : 15
Explanation :
4th smallest element in the given array is 15.

Your Task:
You don't have to read input or print anything. Your task is to complete the function kthSmallest() which takes the array arr[],
integers l and r denoting the starting and ending index of the array and an integer K as input and returns the Kth smallest element.
 
Constraints:
1 <= N <= 10^5
1 <= arr[i] <= 10^5
1 <= K <= N

------------------------------------------------------------------
Time complexity : O(nlogn)
Space Complexity : O(n) -- if stack space is considered else O(1)
------------------------------------------------------------------

class Solution{
    public static int kthSmallest(int[] arr, int l, int r, int k) 
    { 
        while(l<=r)
        {
            int p=partition(arr,l,r);
            
            if(p==(k-1))
                return arr[p];
                
            else if(p>(k-1))    
                r=p-1;
            
            else
                l=p+1;
        }
        
        return -1;
    }
    
    private static int partition(int[] arr,int low,int high)
    {
        int pivot=arr[high],i=low-1;
        
        for(int j=low;j<=high-1;j++)
        {
            if(arr[j] < pivot)
            {
                i++;
                swap(i,j,arr);
            }
        }
        swap(i+1,high,arr);
        
        return i+1;
    }
    
    private static void swap(int i,int j,int[] arr)
    {
        int temp=arr[i];
        arr[i]=arr[j];
        arr[j]=temp;
    }
}
