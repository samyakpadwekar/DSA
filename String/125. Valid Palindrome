A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward.
Alphanumeric characters include letters and numbers.
Given a string s, return true if it is a palindrome, or false otherwise.

Example 1:
Input: s = "A man, a plan, a canal: Panama"
Output: true
Explanation: "amanaplanacanalpanama" is a palindrome.

Example 2:
Input: s = "race a car"
Output: false
Explanation: "raceacar" is not a palindrome.

Example 3:
Input: s = " "
Output: true
Explanation: s is an empty string "" after removing non-alphanumeric characters.
Since an empty string reads the same forward and backward, it is a palindrome.
 
Constraints:
1 <= s.length <= 2 * 10^5
s consists only of printable ASCII characters.

-------------------------------------------------------
Time Complexity: O(n)
Space COmplexity: O(1)
-------------------------------------------------------

class Solution {
    public boolean isPalindrome(String s) {
        int begin=0,end=s.length()-1;

        while(begin < end)
        {
            char start=s.charAt(begin);
            char last=s.charAt(end);

            if(!Character.isLetterOrDigit(start))
                begin++;

            else if(!Character.isLetterOrDigit(last))
                end--;
            
            else{
                if(Character.toLowerCase(start)!=Character.toLowerCase(last))
                    return false;
                begin++;
                end--;
            }
        }

        return true;
    }
}
