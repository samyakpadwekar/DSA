Given two strings s and t, determine if they are isomorphic.
Two strings s and t are isomorphic if the characters in s can be replaced to get t.
All occurrences of a character must be replaced with another character while preserving the order of characters.
No two characters may map to the same character, but a character may map to itself.

Example 1:
Input: s = "egg", t = "add"
Output: true

Example 2:
Input: s = "foo", t = "bar"
Output: false

Example 3:
Input: s = "paper", t = "title"
Output: true
 
Constraints:
1 <= s.length <= 5 * 10^4
t.length == s.length
s and t consist of any valid ascii character.

------------------------------------------------------------------
Time COmplexity:O(n)
Space Complexity:O(n)
------------------------------------------------------------------

class Solution {
    public boolean isIsomorphic(String s, String t) {
        // Base case: for different length of two strings...
        if(s.length() != t.length())
            return false;
        // Create two maps for s & t strings...
        int[] map1 = new int[256];
        int[] map2 = new int[256];
        // Traverse all elements through the loop...
        for(int idx = 0; idx < s.length(); idx++){
            // Compare the maps, if not equal, return false...
            if(map1[s.charAt(idx)] != map2[t.charAt(idx)])
                return false;
            // Insert each character if string s and t into seperate map...
            map1[s.charAt(idx)] = idx + 1;
            map2[t.charAt(idx)] = idx + 1;
        }
        return true;    // Otherwise return true...
    }
}

-----------------------------------------------------------------
Time COmplexity:O(n)
Space Complexity:O(n)
------------------------------------------------------------------

class Solution {
    public boolean isIsomorphic(String s, String t) {
       HashMap<Character, Character> stmap = new HashMap<>();
       HashMap<Character, Boolean> tcheck = new HashMap<>();

       for(int i=0;i<s.length();i++)
       {        
            char ch1=s.charAt(i);
            char ch2=t.charAt(i);

            if(stmap.containsKey(ch1))
            {
                if(stmap.get(ch1)!=ch2)
                    return false;
            }
            else 
            {
               if(tcheck.containsKey(ch2))
                return false;
                else
                    {
                        stmap.put(ch1,ch2);
                        tcheck.put(ch2,true);
                    }
            }
       }

       return true;  
    }
}
